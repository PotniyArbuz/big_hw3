version: "3.9"
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  orders-db:
    image: postgres:16
    environment:
      POSTGRES_USER: orders
      POSTGRES_PASSWORD: orders
      POSTGRES_DB: ordersdb
    ports: ["5433:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orders"]
      interval: 5s
      retries: 12

  payments-db:
    image: postgres:16
    environment:
      POSTGRES_USER: payments
      POSTGRES_PASSWORD: payments
      POSTGRES_DB: paymentsdb
    ports: ["5434:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U payments"]
      interval: 5s
      retries: 12

  orders-service:
    build:
      context: .
      dockerfile: orders-service/Dockerfile
    ports: ["5001:80"]
    environment:
      ASPNETCORE_URLS: "http://+:80"
      ConnectionStrings__Default: "Host=orders-db;Database=ordersdb;Username=orders;Password=orders"
      RabbitMQ__Host: "rabbitmq"
    depends_on:
      orders-db:
        condition: service_healthy
    restart: always

  payments-service:
    build:
      context: .
      dockerfile: payments-service/Dockerfile
    ports: ["5002:80"]
    environment:
      ASPNETCORE_URLS: "http://+:80"
      ConnectionStrings__Default: "Host=payments-db;Database=paymentsdb;Username=payments;Password=payments"
      RabbitMQ__Host: "rabbitmq"
    depends_on:
      payments-db:
        condition: service_healthy
    restart: always
